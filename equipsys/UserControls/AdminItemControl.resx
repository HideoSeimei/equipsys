<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imageBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAHvJJREFUeF7t
        3WuwbGlZ2HFkBKOAaBRJBYiIorEqqdJUiOZixIqVaBKCJrX9MOM5s9bavfsMg1METCGV0uSUfqDQJEpI
        BG8QiRXN3YgfSDAEK2AupVgmGoIXVIwJCQWGYWBEgeTt4dk60+c5M332pXut9/n9q341I87Zu/t5e6+3
        zznr3ftRkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJklSx9TB81ckw/MDJOP5082vN/c3/A4AD+OBqHN+5Hse3Nv+w/ftzY7vSRfS8
        22//1Lbxf3sb9H1bgweAubm3vRH4W/fccccnxzams9R+t/+CNsz3bg0XAObuPW0Puzu2M+3a5p1TG96/
        3RomACzN6/1pwI6t77zzs9vAfnFrgACwVL+wWq0+K7Y5ZW3+vr8N6pe3BgcAyzYM79jscbHd6cGt1+vH
        rMbxJ9LBAcDSTdObN3tdbHs6rQ3nG28YFgD0ZBi+IbY9bRrH8UltMB+4YVAA0Jf3HR8f/97Y/rQex+9K
        hgQA3VkPw9+L7a926/X6k9pAPrw9IADo1G/ec889nxDbYN1Opumrk+EAQLeOh+E5sQ3WrQ3i+7YHAwCd
        e1Vsg3VrQ/ipraEAQO/+Y2yDdWtD2PxUv2w4ANCnYXhHbIN1a4Nw/A+Aau6NbbBuyVAAoHuxDdYtGwoA
        9C62wbplQwGA3sU2WLdsKADQu9gG65YNBQB6F9tg3bKhAEDvYhusWzYUAOhdbIN1y4YCAL2LbbBu2VAA
        oHexDdYtGwoA9C62wbplQwGA3sU2WLdsKADQu9gG65YNBQB6F9tg3bKhAEDvYhusWzYUAOhdbIN1y4YC
        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
        UH7rhiEBQF/ub3vek2P706aTafrbyaAAoCcvi21Ppz1wL8A0/UwyLADowU+98OjoE2Pb04O7exh+XxvQ
        r20NDACW7lfW6/Wnx3anrGvD8MzNoLYGBwBL9SvHx8efE9ucHq7n3X77p7aBvWVrgACwNG/a7GmxvWmX
        jo6ObluP47U2vHdvDRMA5u7/rMZxff369UfHtqZbbRiGT2lDfHkbpp8aCMDc3bs51XbPHXd8cmxjuoja
        UP9SezPwQ23AP91sbha8PwYOAPv2wbYnvXM9jm9t//6PNntUbFeSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSVKhHPer/A+WiAcDc
        +sj7AAAAAElFTkSuQmCC
</value>
  </data>
</root>