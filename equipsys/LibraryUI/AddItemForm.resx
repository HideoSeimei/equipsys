<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BorrowingImageBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAHilJREFUeF7t
        3Wusbetd1/Ha0iK03IRSY6lAoSCJJtRYwQtSI1FQEdAsXpyy93meseYY+/SUE2wxpTGgO/CCFFSoVVou
        bQWJ4B0pL6pghdjiJVBSBRFoCxTRatNiTy+HS6lmnu5dzvmtec5e1znHGP/PN/kkBNq15vw/Y49nsvd4
        1nrMYyRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiSpYFNrXzq29r1j7z819v4rY+8PjL3/PwA4gPdten/r1Psbpt7/4ab3L8l9Sxfo
        uXfd9XFTa98y9v6eHcMHgDm5f9P737rvOc/56NzPdIbG1r5q7P2dOwYMAHP2jrG1e3Nf0x3afnIae/+3
        OwYKAEvyGn8bcMqmu+/+tLH3N+0YIgAs0S9sNptPzf1OD2n77/1j77+4Y3gAsFytvWW7x+W+p+3/5z9N
        j9/0/uMnhgYAazAMr9vudbn/lW/s/WtPDAsA1qS1r8n9r3S99yePvb/3xKAAYF3edXx8/HtyHyzb1Pu3
        7xgSAKzO1Nrfy32wZNM0feTY+/tzQACwUr9+3333fXjuh+Uah+HLdgwHAFbruLUvzv2wXGPvr8jBAMDK
        vTz3w3KNvf/kjsEAwJr9x9wPy3Xrt/rlYABgvVp7S+6H5XL8D4CC7s/9sFw7hgIAq5f7YblyIABQQe6H
        5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7YblyIABQQe6H5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7Ybly
        IABQQe6H5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7YblyIABQQe6H5cqBAEAFuR+WKwcCABXkfliuHAgA
        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
        yYB8beXKgcyJzV+S1tdcTgbk6ypXDmQubP6StN7mcDIgX1O5ciBzYPOXpPV36JMB+XrKlQM5NJu/JNXp
        kCcD8rWUKwdySDZ/SarXoU4G5OsoVw7kUGz+klSzQ50MyNdRrhzIIdj8Jal2hzgZkK+hXDmQfZuG4Wa+
        JklSvfZ9MiC/f7lyIABQQe6H5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7YblyIABQQe6H5cqBAEAFuR+W
        KwcCABXkfliuHAgAVJD7YblyIABQQe6H5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7YblyIABQQe6H5cqB
        AEAFuR+WKwcCABXkfliuHAgAVJD7YblyIABQQe6H5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7YblyIABQ
        Qe6H5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7YblyIABQQe6H5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7
        YblyIABQQe6H5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7YblyIABQQe6H5cqBAEAFuR+WKwcCABXkfliu
        HAgAVJD7YblyIABQQe6H5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7YblyIABQQe6H5cqBAEAFuR+WKwcC
        ABXkfliuHAgAVJD7YblyIABQQe6H5cqBAEAFuR+WKwcCABXkfliuHAgAVJD7YbnG3t+TQwGAlXtP7ofl
        Glt7y47BAMCavSn3w3KNvf+HHYMBgPUahtflfliusbWXnRgMAKzbS3M/LNem9y/ZMRgAWK9h+KLcD8t1
        7dq1J469v//EcABgnX7j6OjoCbkflmzq/ZU7BgQA69Pay3IfLNtms/mksfffPDEkAFiXBzabzVNyHyzd
        OAx/e8egAGBNXpz7X/kefBZgGN64Y1gAsAY/+fyjo4/I/U+Pecxj7m3t9469/8qOoQHAkv3SNE2fkPue
        HtKN1p6xHdSO4QHAEv3S8fHxp+d+px099667Pm7s/fU7hggAS/Kj2z0t9zk9SkdHR4+ber8x9v72HQMF
        gDn7P5vep5s3bz429zedstbax256f4nfGgjAAty/PdV233Oe89G5n+kCjcPwlza9f//Y+0/deljwgR3D
        B4B9eN+m97dOvb9h7P0fbfeo3LckSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkqUL/H+WiAcBuOBfyAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>