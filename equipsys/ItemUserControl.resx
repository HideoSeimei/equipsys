<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>